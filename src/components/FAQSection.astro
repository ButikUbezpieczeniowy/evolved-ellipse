---
// src/components/FAQSection.astro
// Rozwiązanie Finalne: Bezpośredni Import Logiki AI z katalogu src/ai/

import { generateFAQContent } from '../ai/gemini-logic.js'; 

export interface FAQItem {
  pytanie: string;
  odpowiedz: string;
}

export interface Props {
  topic: string; 
}

const { topic } = Astro.props;
let faqItems: FAQItem[] = [] as FAQItem[];
let error: string | null = null; 

// KLUCZOWE: Wywołanie funkcji bezpośrednio w Node.js Netlify (Build Time)
try {
  console.log(`[Gemini AI] BEZPOŚREDNIE Wywoływanie logiki dla tematu: ${topic}`);

  const data = await generateFAQContent(topic);
  
  // Walidacja i rzutowanie typu (usuwa błędy map/length)
  if (Array.isArray(data)) {
      faqItems = data as FAQItem[];
  } else {
      throw new Error('Otrzymany format danych z AI nie jest poprawną tablicą JSON.');
  }

} catch (e) {
  const errorMessage = e instanceof Error ? e.message : 'Nieznany błąd.';
  error = `Błąd AI: ${errorMessage}. Sprawdź logi kompilacji (Build log) Netlify, sekcja 'API Gemini'`;
  console.error(error);
}
---

<section id="faq" class="py-12 bg-gray-50">
    <div class="max-w-4xl mx-auto px-4">
        <h2 class="text-3xl font-extrabold text-gray-900 mb-8 text-center">
            Najczęściej Zadawane Pytania (FAQ)
        </h2>
        
        {/* Renderowanie jest teraz odporne na błędy i poprawnie wyświetli błąd, jeśli wystąpi */}
        {error ? (
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <strong class="font-bold">Błąd Generowania AI:</strong>
                <span class="block sm:inline ml-2">{error}</span>
            </div>
        ) : faqItems.length === 0 ? (
            <p class="text-center text-gray-500">
                ✅ Kompilacja udana, ale sekcja FAQ jest pusta. Spróbuj zmienić temat.
            </p>
        ) : (
            <div class="space-y-4">
                {faqItems.map((item) => (
                    <details class="bg-white shadow rounded-lg overflow-hidden border border-gray-200">
                        <summary class="flex justify-between items-center p-5 cursor-pointer list-none font-semibold text-lg text-blue-600">
                            {item.pytanie}
                            <span class="ml-2 transform transition-transform duration-300">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>
                            </span>
                        </summary>
                        <div class="p-5 pt-0 text-gray-700 border-t border-gray-200">
                            <p>{item.odpowiedz}</p>
                        </div>
                    </details>
                ))}
            </div>
        )}
    </div>
</section>

{/* JSON-LD dla SEO */}
{faqItems.length > 0 && (
    <script type="application/ld+json" is:inline set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": faqItems.map(item => ({
            "@type": "Question",
            "name": item.pytanie,
            "acceptedAnswer": {
                "@type": "Answer",
                "text": item.odpowiedz
            }
        }))
    })} />
)}